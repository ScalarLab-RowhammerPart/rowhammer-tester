diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3a6455c..2a944e8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -132,7 +132,7 @@ INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_BINARY_DIR})
 
 add_library(xc3sproglib  STATIC sysfs.cpp sysfscreator.cpp sysfsvoice.cpp ioftdi.cpp 
                         iofx2.cpp devicedb.cpp jtag.cpp jedecfile.cpp bitfile.cpp 
-                        iomatrixcreator.cpp iomatrixvoice.cpp iowiringpi.cpp
+						#iomatrixcreator.cpp iomatrixvoice.cpp iowiringpi.cpp
 			iobase.cpp  progalgxc95x.cpp utilities.cpp
 			progalgxcf.cpp progalgxcfp.cpp progalgxc3s.cpp
 			progalgavr.cpp progalgxc2c.cpp  mapfile_xc2c.cpp
@@ -140,7 +140,7 @@ add_library(xc3sproglib  STATIC sysfs.cpp sysfscreator.cpp sysfsvoice.cpp ioftdi
                         cabledb.cpp pdioverjtag.cpp xmega_pdi_nvm.cpp
                         ${CONDITIONAL_FILES} devices.h cables.h)
 
-set(LIBS ${LIBS} wiringPiDev wiringPi)
+#set(LIBS ${LIBS} wiringPiDev wiringPi)
 
 add_executable(xc2c_warp xc2c_warp.cpp)
 target_link_libraries(xc2c_warp xc3sproglib ${CONDITIONAL_LIBS})
diff --git a/utilities.cpp b/utilities.cpp
index eabc7e9..32ce44a 100644
--- a/utilities.cpp
+++ b/utilities.cpp
@@ -100,18 +100,18 @@ int  getIO( std::auto_ptr<IOBase> *io, struct cable_t * cable, char const *dev,
       io->get()->setVerbose(verbose);
       res = io->get()->Init(cable, serial, use_freq);
   }
-  else if(cable->cabletype == CABLE_MATRIX_CREATOR)
-  {
-      io->reset(new IOMatrixCreator());
-      io->get()->setVerbose(verbose);
-      res = io->get()->Init(cable, serial, use_freq);
-  }
-  else if(cable->cabletype == CABLE_MATRIX_VOICE)
-  {
-      io->reset(new IOMatrixVoice());
-      io->get()->setVerbose(verbose);
-      res = io->get()->Init(cable, serial, use_freq);
-  }
+  //else if(cable->cabletype == CABLE_MATRIX_CREATOR)
+  //{
+  //    io->reset(new IOMatrixCreator());
+  //    io->get()->setVerbose(verbose);
+  //    res = io->get()->Init(cable, serial, use_freq);
+  //}
+  //else if(cable->cabletype == CABLE_MATRIX_VOICE)
+  //{
+  //    io->reset(new IOMatrixVoice());
+  //    io->get()->setVerbose(verbose);
+  //    res = io->get()->Init(cable, serial, use_freq);
+  //}
   else
   {
       fprintf(stderr, "Unknown Cable \"%s\" \n", getCableName(cable->cabletype));
